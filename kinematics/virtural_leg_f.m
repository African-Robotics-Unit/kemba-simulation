function [r,dr,phi,dphi] = virtural_leg_f(dl_ps,dtheta_b,dtheta_m,l_ps,theta_b,theta_m)
%VIRTURAL_LEG_F
%    [R,DR,PHI,DPHI] = VIRTURAL_LEG_F(DL_PS,DTHETA_B,DTHETA_M,L_PS,THETA_B,THETA_M)

%    This function was generated by the Symbolic Math Toolbox version 9.1.
%    01-Jun-2022 14:59:59

t2 = l_ps+2.057e-1;
t4 = l_ps.*8.53904024832413e+1;
t3 = t2.^2;
t7 = t4+1.756480579080274e+1;
t5 = t3.*4.269520124162065e+1;
t6 = -t5;
t9 = t5-2.639801597568163;
t8 = t6+2.639801597568163;
t11 = t9.^2;
t10 = acos(t8);
t12 = -t11;
t13 = t12+1.0;
t15 = t10+1.274053155386639e-1;
t14 = 1.0./sqrt(t13);
t16 = cos(t15);
t17 = sin(t15);
t18 = t17.^2;
t19 = t16.*1.13256e-1;
t20 = -t19;
t21 = t20+1.1332e-1;
t22 = 1.0./sqrt(t21);
r = 1.0./t22;
if nargout > 1
    dr = dl_ps.*t7.*t14.*t17.*t22.*5.6628e-2;
end
if nargout > 2
    phi = theta_b+theta_m+asin(t17.*t22.*(1.17e+2./5.0e+2));
end
if nargout > 3
    dphi = dtheta_b+dtheta_m+dl_ps.*(t7.*t14.*t16.*t22.*(1.17e+2./5.0e+2)-t7.*t14.*t18.*t22.^3.*1.3250952e-2).*1.0./sqrt((t18.*5.4756e-2)./(t19-1.1332e-1)+1.0);
end
